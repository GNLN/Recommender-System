shiny::runApp()
library(randomforest)
install.packages("randomForest")
library(randomForest)
install.packages("randomForest")
library(randomForest)
library(party)
install.packages("party")
library(party)
shiny::runApp()
shiny::runApp()
shiny::runApp()
head(expedia)
expedia <- read.csv(file="/home/sathya/Downloads/sampled_train.csv",head=TRUE,sep=",")
head(expedia)
expedia<- head(expedia)
expedia
runApp()
expedia$hotel_cluster <- as.factor(expedia$hotel_cluster)
runApp()
runApp()
expedia <- read.csv(file="/home/sathya/Downloads/sampled_train.csv",head=TRUE,sep=",")
expedia$date_time <- NULL
expedia$hotel_cluster <- as.factor(expedia$hotel_cluster)
expedia
expedia<- head(expedia, 500)
expedia
model <- randomForest(hotel_cluster ~ site_name + posa_continent + user_location_country + is_booking, data = expedia)
levels(expedia$hotel_cluster)
library(randomForest)
library(party)
library(faraway)
library(shiny)
library(dplyr)
expedia <- read.csv(file="/home/sathya/Downloads/sampled_train.csv",head=TRUE,sep=",")
expedia$date_time <- NULL
expedia$hotel_cluster <- as.factor(expedia$hotel_cluster)
expedia<- head(expedia, 500)
model <- randomForest(hotel_cluster ~ site_name + posa_continent + user_location_country + is_booking, data = expedia)
expedia <- read.csv(file="/home/sathya/Downloads/sampled_train.csv",head=TRUE,sep=",")
expedia$date_time <- NULL
#expedia_df <- createDataFrame(sqlContext, expedia)
#printSchema(expedia_df)
#SparkR::head(expedia_df)
expedia$hotel_cluster <- as.factor(expedia$hotel_cluster)
expedia<- head(expedia)
levels(expedia$hotel_cluster)
head(expedia)
expedia<- head(expedia)
expedia
levels(expedia$hotel_cluster)
model <- randomForest(hotel_cluster ~ site_name + posa_continent + user_location_country + is_booking, data = expedia)
model <- randomForest(hotel_cluster ~ site_name + posa_continent + user_location_country + is_booking, data = expedia,  ntree=10, keep.forest=FALSE, importance=TRUE)
model <- randomForest(hotel_cluster ~ site_name + posa_continent + user_location_country + is_booking, data = expedia,  ntree=5, keep.forest=FALSE, importance=TRUE)
library(sparkr)
install.packages("sparkr")
install.packages("sparklyr")
spark_install(version = "1.6.2")
sc <- spark_connect(master = "local")
library(sparklyr)
spark_install(version = "1.6.2")
sc <- spark_connect(master = "local")
expedia <- read.csv(file="/home/sathya/Downloads/sampled_train.csv",head=TRUE,sep=",")
expedia_tbl <- copy_to(sc, expedia)
fit <- expedia_tbl %>%ml_linear_regression(response = "hotel_cluster", features = c("site_name"," posa_continent","user_location_country","is_booking"))
fit <- expedia_tbl %>%ml_logistic_regression(response = "hotel_cluster", features = c("site_name"," posa_continent","user_location_country","is_booking"))
fit <- ml_logistic_regression(expedia_tbl, response = "hotel_cluster", features = c("site_name"," posa_continent","user_location_country","is_booking"))
ml_formula <- formula(cluster_hotel , site_name+ posa_continent+user_location_country+is_booking)
expedia_tbl <- copy_to(sc, expedia)
?formula
ml_formula <- formula(cluster_hotel , site_name+ posa_continent+user_location_country+is_booking)
ml_formula <- formula(cluster_hotel~ site_name+ posa_continent+user_location_country+is_booking)
(fit <- ml_random_forest(expedia_tbl, ml_formula))
ml_formula <- formula(hotel_cluster~ site_name+ posa_continent+user_location_country+is_booking)
(fit <- ml_random_forest(expedia_tbl, ml_formula))
(model <- ml_random_forest(expedia_tbl, ml_formula))
predictions <- sdf_predict(model, expedia_tbl)
predictions
select(predictions, hotel_cluster, prediction)
expedia <- read.csv(file="/home/sathya/Downloads/sampled_train.csv",head=TRUE,sep=",")
expedia$date_time <- NULL
expedia$hotel_cluster <- as.factor(expedia$hotel_cluster)
expedia_tbl <- copy_to(sc, expedia)
ex <- copy_to(sc, expedia)
ex <- copy_to(sc, expedia, overwrite = TRUE)
ml_formula <- formula(hotel_cluster~ site_name+ posa_continent+user_location_country+is_booking)
(model <- ml_random_forest(expedia_tbl, ml_formula))
predictions <- sdf_predict(model, expedia_tbl)
select(predictions, hotel_cluster, prediction)
runApp()
shiny::runApp()
ex <- copy_to(sc, expedia, overwrite = TRUE)
ml_formula <- formula(hotel_cluster~ site_name+ posa_continent+user_location_country+is_booking)
(model <- ml_random_forest(ex, ml_formula))
predictions <- sdf_predict(model, ex)
select(predictions, hotel_cluster, prediction)
runApp()
test
runApp()
test <- data.frame(site_name = site_name, posa_continent = posa_continent, user_location_country = user_location_country, is_booking = is_booking)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
predictions <- predict(model, ex)
select(predictions, hotel_cluster, prediction)
predictions
table(predictions)
predictions <- predict(model, expedia)
predictions <- predict(model, ex)
predictions
ex
expedia <- read.csv(file="/home/sathya/Downloads/sampled_train.csv",head=TRUE,sep=",")
expedia$date_time <- NULL
expedia$hotel_cluster <- as.factor(expedia$hotel_cluster)
ex <- copy_to(sc, expedia, overwrite = TRUE)
ml_formula <- formula(hotel_cluster~ site_name+ posa_continent+user_location_country+is_booking)
(model <- ml_random_forest(ex, ml_formula))
predictions <- predict(model, ex)
table(predictions)
runApp()
runApp()
runApp()
site_name=3
posa_continent=1
user_location_country=66
is_booking=1
test <- data.frame(site_name, posa_continent, user_location_country,is_booking)
ex1 <- copy_to(sc,test , overwrite = TRUE)
predict(model, ex1)[1]
